// Generated by Haxe 4.2.2
#include <hxcpp.h>

#ifndef INCLUDED_Config
#include <Config.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedSpriteGroup
#include <flixel/group/FlxTypedSpriteGroup.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_ui_ControlsGroup
#include <ui/ControlsGroup.h>
#endif
#ifndef INCLUDED_ui_FlxActionMode
#include <ui/FlxActionMode.h>
#endif
#ifndef INCLUDED_ui_FlxDPadMode
#include <ui/FlxDPadMode.h>
#endif
#ifndef INCLUDED_ui_FlxVirtualPad
#include <ui/FlxVirtualPad.h>
#endif
#ifndef INCLUDED_ui_Hitbox
#include <ui/Hitbox.h>
#endif
#ifndef INCLUDED_ui_Mobilecontrols
#include <ui/Mobilecontrols.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_620135e24d698a2b_11_new,"ui.Mobilecontrols","new",0x73ee77c4,"ui.Mobilecontrols.new","ui/Mobilecontrols.hx",11,0x65909b0b)
HX_LOCAL_STACK_FRAME(_hx_pos_620135e24d698a2b_46_initVirtualPad,"ui.Mobilecontrols","initVirtualPad",0x7381c254,"ui.Mobilecontrols.initVirtualPad","ui/Mobilecontrols.hx",46,0x65909b0b)
HX_LOCAL_STACK_FRAME(_hx_pos_620135e24d698a2b_64_getModeFromNumber,"ui.Mobilecontrols","getModeFromNumber",0x1b489ab0,"ui.Mobilecontrols.getModeFromNumber","ui/Mobilecontrols.hx",64,0x65909b0b)
namespace ui{

void Mobilecontrols_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_620135e24d698a2b_11_new)
HXLINE(  13)		this->mode = ::ui::ControlsGroup_obj::HITBOX_dyn();
HXLINE(  22)		super::__construct(null(),null(),null());
HXLINE(  24)		this->config =  ::Config_obj::__alloc( HX_CTX );
HXLINE(  27)		this->mode = ::ui::Mobilecontrols_obj::getModeFromNumber(this->config->getcontrolmode());
HXLINE(  28)		 ::Dynamic _hx_tmp = ::haxe::Log_obj::trace;
HXDLIN(  28)		int _hx_tmp1 = this->config->getcontrolmode();
HXDLIN(  28)		_hx_tmp(_hx_tmp1,::hx::SourceInfo(HX_("source/ui/Mobilecontrols.hx",ff,5b,52,90),28,HX_("ui.Mobilecontrols",d2,85,e6,b4),HX_("new",60,d0,53,00)));
HXLINE(  30)		switch((int)(this->mode->_hx_getIndex())){
            			case (int)0: {
HXLINE(  33)				this->initVirtualPad(0);
            			}
            			break;
            			case (int)1: {
HXLINE(  35)				this->initVirtualPad(1);
            			}
            			break;
            			case (int)2: {
            			}
            			break;
            			case (int)3: {
HXLINE(  37)				this->initVirtualPad(2);
            			}
            			break;
            			case (int)4: {
HXLINE(  39)				this->_hitbox =  ::ui::Hitbox_obj::__alloc( HX_CTX ,null());
HXLINE(  40)				this->add(this->_hitbox);
            			}
            			break;
            		}
            	}

Dynamic Mobilecontrols_obj::__CreateEmpty() { return new Mobilecontrols_obj; }

void *Mobilecontrols_obj::_hx_vtable = 0;

Dynamic Mobilecontrols_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Mobilecontrols_obj > _hx_result = new Mobilecontrols_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Mobilecontrols_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x2c01639b) {
		if (inClassId<=(int)0x288ce903) {
			if (inClassId<=(int)0x21d0b730) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x21d0b730;
			} else {
				return inClassId==(int)0x288ce903;
			}
		} else {
			return inClassId==(int)0x2c01639b;
		}
	} else {
		return inClassId==(int)0x7ccf8994 || inClassId==(int)0x7dab0655;
	}
}

void Mobilecontrols_obj::initVirtualPad(int vpadMode){
            	HX_GC_STACKFRAME(&_hx_pos_620135e24d698a2b_46_initVirtualPad)
HXLINE(  47)		switch((int)(vpadMode)){
            			case (int)1: {
HXLINE(  50)				this->_virtualPad =  ::ui::FlxVirtualPad_obj::__alloc( HX_CTX ,::ui::FlxDPadMode_obj::FULL_dyn(),::ui::FlxActionMode_obj::NONE_dyn());
            			}
            			break;
            			case (int)2: {
HXLINE(  52)				this->_virtualPad =  ::ui::FlxVirtualPad_obj::__alloc( HX_CTX ,::ui::FlxDPadMode_obj::FULL_dyn(),::ui::FlxActionMode_obj::NONE_dyn());
HXLINE(  53)				this->_virtualPad = this->config->loadcustom(this->_virtualPad);
            			}
            			break;
            			default:{
HXLINE(  55)				this->_virtualPad =  ::ui::FlxVirtualPad_obj::__alloc( HX_CTX ,::ui::FlxDPadMode_obj::RIGHT_FULL_dyn(),::ui::FlxActionMode_obj::NONE_dyn());
            			}
            		}
HXLINE(  58)		this->_virtualPad->set_alpha(((Float)0.75));
HXLINE(  59)		this->add(this->_virtualPad);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mobilecontrols_obj,initVirtualPad,(void))

 ::ui::ControlsGroup Mobilecontrols_obj::getModeFromNumber(int modeNum){
            	HX_STACKFRAME(&_hx_pos_620135e24d698a2b_64_getModeFromNumber)
HXDLIN(  64)		switch((int)(modeNum)){
            			case (int)0: {
HXLINE(  66)				return ::ui::ControlsGroup_obj::VIRTUALPAD_RIGHT_dyn();
            			}
            			break;
            			case (int)1: {
HXLINE(  67)				return ::ui::ControlsGroup_obj::VIRTUALPAD_LEFT_dyn();
            			}
            			break;
            			case (int)2: {
HXLINE(  68)				return ::ui::ControlsGroup_obj::KEYBOARD_dyn();
            			}
            			break;
            			case (int)3: {
HXLINE(  69)				return ::ui::ControlsGroup_obj::VIRTUALPAD_CUSTOM_dyn();
            			}
            			break;
            			case (int)4: {
HXLINE(  70)				return ::ui::ControlsGroup_obj::HITBOX_dyn();
            			}
            			break;
            			default:{
HXLINE(  72)				return ::ui::ControlsGroup_obj::VIRTUALPAD_RIGHT_dyn();
            			}
            		}
HXLINE(  64)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Mobilecontrols_obj,getModeFromNumber,return )


::hx::ObjectPtr< Mobilecontrols_obj > Mobilecontrols_obj::__new() {
	::hx::ObjectPtr< Mobilecontrols_obj > __this = new Mobilecontrols_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< Mobilecontrols_obj > Mobilecontrols_obj::__alloc(::hx::Ctx *_hx_ctx) {
	Mobilecontrols_obj *__this = (Mobilecontrols_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Mobilecontrols_obj), true, "ui.Mobilecontrols"));
	*(void **)__this = Mobilecontrols_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

Mobilecontrols_obj::Mobilecontrols_obj()
{
}

void Mobilecontrols_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Mobilecontrols);
	HX_MARK_MEMBER_NAME(mode,"mode");
	HX_MARK_MEMBER_NAME(_hitbox,"_hitbox");
	HX_MARK_MEMBER_NAME(_virtualPad,"_virtualPad");
	HX_MARK_MEMBER_NAME(config,"config");
	 ::flixel::group::FlxTypedSpriteGroup_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void Mobilecontrols_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(mode,"mode");
	HX_VISIT_MEMBER_NAME(_hitbox,"_hitbox");
	HX_VISIT_MEMBER_NAME(_virtualPad,"_virtualPad");
	HX_VISIT_MEMBER_NAME(config,"config");
	 ::flixel::group::FlxTypedSpriteGroup_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val Mobilecontrols_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"mode") ) { return ::hx::Val( mode ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"config") ) { return ::hx::Val( config ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"_hitbox") ) { return ::hx::Val( _hitbox ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"_virtualPad") ) { return ::hx::Val( _virtualPad ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"initVirtualPad") ) { return ::hx::Val( initVirtualPad_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool Mobilecontrols_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 17:
		if (HX_FIELD_EQ(inName,"getModeFromNumber") ) { outValue = getModeFromNumber_dyn(); return true; }
	}
	return false;
}

::hx::Val Mobilecontrols_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"mode") ) { mode=inValue.Cast<  ::ui::ControlsGroup >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"config") ) { config=inValue.Cast<  ::Config >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"_hitbox") ) { _hitbox=inValue.Cast<  ::ui::Hitbox >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"_virtualPad") ) { _virtualPad=inValue.Cast<  ::ui::FlxVirtualPad >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Mobilecontrols_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("mode",63,d3,60,48));
	outFields->push(HX_("_hitbox",37,ff,9e,c5));
	outFields->push(HX_("_virtualPad",27,51,51,33));
	outFields->push(HX_("config",c2,56,d2,c7));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Mobilecontrols_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::ui::ControlsGroup */ ,(int)offsetof(Mobilecontrols_obj,mode),HX_("mode",63,d3,60,48)},
	{::hx::fsObject /*  ::ui::Hitbox */ ,(int)offsetof(Mobilecontrols_obj,_hitbox),HX_("_hitbox",37,ff,9e,c5)},
	{::hx::fsObject /*  ::ui::FlxVirtualPad */ ,(int)offsetof(Mobilecontrols_obj,_virtualPad),HX_("_virtualPad",27,51,51,33)},
	{::hx::fsObject /*  ::Config */ ,(int)offsetof(Mobilecontrols_obj,config),HX_("config",c2,56,d2,c7)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *Mobilecontrols_obj_sStaticStorageInfo = 0;
#endif

static ::String Mobilecontrols_obj_sMemberFields[] = {
	HX_("mode",63,d3,60,48),
	HX_("_hitbox",37,ff,9e,c5),
	HX_("_virtualPad",27,51,51,33),
	HX_("config",c2,56,d2,c7),
	HX_("initVirtualPad",38,37,92,85),
	::String(null()) };

::hx::Class Mobilecontrols_obj::__mClass;

static ::String Mobilecontrols_obj_sStaticFields[] = {
	HX_("getModeFromNumber",4c,4c,ad,f6),
	::String(null())
};

void Mobilecontrols_obj::__register()
{
	Mobilecontrols_obj _hx_dummy;
	Mobilecontrols_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("ui.Mobilecontrols",d2,85,e6,b4);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Mobilecontrols_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Mobilecontrols_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Mobilecontrols_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Mobilecontrols_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Mobilecontrols_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Mobilecontrols_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace ui
