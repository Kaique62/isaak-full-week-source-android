// Generated by Haxe 4.2.2
#ifndef INCLUDED_Config
#define INCLUDED_Config

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Config)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS2(flixel,group,FlxTypedSpriteGroup)
HX_DECLARE_CLASS2(flixel,util,FlxSave)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS1(ui,FlxVirtualPad)



class HXCPP_CLASS_ATTRIBUTES Config_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Config_obj OBJ_;
		Config_obj();

	public:
		enum { _hx_ClassId = 0x5db18da2 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="Config")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"Config"); }
		static ::hx::ObjectPtr< Config_obj > __new();
		static ::hx::ObjectPtr< Config_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Config_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Config",e2,ca,66,fc); }

		 ::flixel::util::FlxSave save;
		bool setdownscroll( ::Dynamic value);
		::Dynamic setdownscroll_dyn();

		bool getdownscroll();
		::Dynamic getdownscroll_dyn();

		int getcontrolmode();
		::Dynamic getcontrolmode_dyn();

		int setcontrolmode(::hx::Null< int >  mode);
		::Dynamic setcontrolmode_dyn();

		void savecustom( ::ui::FlxVirtualPad _pad);
		::Dynamic savecustom_dyn();

		 ::ui::FlxVirtualPad loadcustom( ::ui::FlxVirtualPad _pad);
		::Dynamic loadcustom_dyn();

		void setFrameRate(::hx::Null< int >  fps);
		::Dynamic setFrameRate_dyn();

		int getFrameRate();
		::Dynamic getFrameRate_dyn();

};


#endif /* INCLUDED_Config */ 
