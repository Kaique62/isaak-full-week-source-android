// Generated by Haxe 4.2.2
#ifndef INCLUDED_ui_ControlsGroup
#define INCLUDED_ui_ControlsGroup

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(ui,ControlsGroup)
namespace ui{


class ControlsGroup_obj : public ::hx::EnumBase_obj
{
	typedef ::hx::EnumBase_obj super;
		typedef ControlsGroup_obj OBJ_;

	public:
		ControlsGroup_obj() {};
		HX_DO_ENUM_RTTI;
		static void __boot();
		static void __register();
		static bool __GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::String GetEnumName( ) const { return HX_("ui.ControlsGroup",2f,0d,a9,d3); }
		::String __ToString() const { return HX_("ControlsGroup.",45,ef,db,0e) + _hx_tag; }

		static ::ui::ControlsGroup HITBOX;
		static inline ::ui::ControlsGroup HITBOX_dyn() { return HITBOX; }
		static ::ui::ControlsGroup KEYBOARD;
		static inline ::ui::ControlsGroup KEYBOARD_dyn() { return KEYBOARD; }
		static ::ui::ControlsGroup VIRTUALPAD_CUSTOM;
		static inline ::ui::ControlsGroup VIRTUALPAD_CUSTOM_dyn() { return VIRTUALPAD_CUSTOM; }
		static ::ui::ControlsGroup VIRTUALPAD_LEFT;
		static inline ::ui::ControlsGroup VIRTUALPAD_LEFT_dyn() { return VIRTUALPAD_LEFT; }
		static ::ui::ControlsGroup VIRTUALPAD_RIGHT;
		static inline ::ui::ControlsGroup VIRTUALPAD_RIGHT_dyn() { return VIRTUALPAD_RIGHT; }
};

} // end namespace ui

#endif /* INCLUDED_ui_ControlsGroup */ 
